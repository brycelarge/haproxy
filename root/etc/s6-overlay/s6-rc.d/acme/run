#!/usr/bin/with-contenv bash
# shellcheck shell=bash

source /scripts/acme_functions.sh # issue_cert and deploy_cert functions
source /scripts/debug.sh

ACME_THUMBPRINT="/config/acme/ca/thumbprint"
HAPROXY_PID_FILE="/var/run/haproxy/haproxy.pid"
HAPROXY_SOCKET="/var/lib/haproxy/admin.sock"

# Path to HAProxy certificates
HAPROXY_CERTS_DIR="/etc/haproxy/certs"

# Path to ACME certificates (adjust if needed)
ACME_CERTS_DIR="/config/acme/certs"

# Loop until acme thumbprint file exists
while [ ! -f "$ACME_THUMBPRINT" ]; do
    echo "[acme] waiting for $ACME_THUMBPRINT to be created before setting up acme..." | ts '%Y-%m-%d %H:%M:%S'
    sleep 3
done

# Wait for HAProxy to be fully started by checking for its PID file and socket
echo "[acme] waiting for HAProxy to be fully started..." | ts '%Y-%m-%d %H:%M:%S'
while [ ! -f "$HAPROXY_PID_FILE" ] || [ ! -S "$HAPROXY_SOCKET" ]; do
    echo "[acme] waiting for HAProxy to be fully started (PID file: $([ -f "$HAPROXY_PID_FILE" ] && echo "exists" || echo "missing"), Socket: $([ -S "$HAPROXY_SOCKET" ] && echo "exists" || echo "missing"))..." | ts '%Y-%m-%d %H:%M:%S'
    sleep 5
done

# Additional check to ensure HAProxy is responding
MAX_ATTEMPTS=12
ATTEMPT=0
while [ $ATTEMPT -lt $MAX_ATTEMPTS ]; do
    if echo "show info" | socat stdio "unix-connect:$HAPROXY_SOCKET" &>/dev/null; then
        echo "[acme] HAProxy is fully operational, proceeding with certificate checks..." | ts '%Y-%m-%d %H:%M:%S'
        break
    fi
    echo "[acme] HAProxy is not responding yet, waiting (attempt $((ATTEMPT+1))/$MAX_ATTEMPTS)..." | ts '%Y-%m-%d %H:%M:%S'
    ATTEMPT=$((ATTEMPT+1))
    sleep 5
done

check_for_missing_domain_certs "no"

# Make sure cron renewal is properly set up
echo "[acme] Setting up certificate renewal cron job..." | ts '%Y-%m-%d %H:%M:%S'

# Ensure the renewal script exists and is executable
if [ ! -x "/usr/local/bin/renew-certs.sh" ]; then
    setup_acme_renewal
else
    # Ensure script has correct permissions
    chmod +x /usr/local/bin/renew-certs.sh
    chown "${USER}:${USER}" /usr/local/bin/renew-certs.sh
fi

# Verify the cron job is properly installed
if ! s6-setuidgid "${USER}" crontab -l 2>/dev/null | grep -q "/usr/local/bin/renew-certs.sh"; then
    echo "[acme] Cron job not found, reinstalling..." | ts '%Y-%m-%d %H:%M:%S'
    setup_acme_renewal
else
    echo "[acme] Cron job is installed correctly" | ts '%Y-%m-%d %H:%M:%S'
fi

# Run a test renewal to verify functionality
echo "[acme] Running a test certificate check..." | ts '%Y-%m-%d %H:%M:%S'
s6-setuidgid "${USER}" /usr/local/bin/renew-certs.sh 

# Verify that cron daemon is running (should be started by the cron service)
if pgrep -x "crond" > /dev/null; then
    echo "[acme] Cron daemon is running" | ts '%Y-%m-%d %H:%M:%S'
else
    echo "[acme] Warning: Cron daemon not detected, certificates may not auto-renew" | ts '%Y-%m-%d %H:%M:%S'
fi

echo "[acme] Certificate renewal setup complete" | ts '%Y-%m-%d %H:%M:%S'

# Keep the service running
tail -f /dev/null